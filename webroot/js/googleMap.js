var googleMap;
var googleMapType;
var postToken;

function readIPList(myMap, mapType, postToken) {
    $.ajax({
        // The URL for the request
        url: "fetch-ip-list",
        // The data to send (will be converted to a query string)
        data: {
            mapType: mapType
        },
        headers: {
            "X-CSRF-Token": postToken 
        },
        // headers: {
        //     'X-CSRF-Token': csrfToken 
        // }, 
        // Whether this is a POST or GET request - use GET for requests that don't change data on the server, POST otherwise
        type: "POST",
        // wheter cached data should be used
        cache: false,
        // The type of data we expect back
        dataType: "",
        // Code to run if the request succeeds - the response is passed to the function
        success: function (response, textStatus, jqXHR) {
            parseIPList(myMap, response);
        },
        error: function (response, textStatus, jqXHR) {
            alert("Error getting User Locations.\nPlease try again.");
        }
    });
}

function parseIPList(myMap, response) {
    var tempUserLocations = new Array();
    // var parsedResponse = JSON.parse(response);
    var parsedResponse = response;

    for (var i = 0; i < parsedResponse.length; i++) {
        var info = "" + parsedResponse[i]["organization"] + " - " + parsedResponse[i]["city"] + ", " + parsedResponse[i]["country"] + "";
        var lat = parsedResponse[i]["lat"];
        var lon = parsedResponse[i]["lon"];
        tempUserLocations.push([info, lat, lon]);
    }

    setTimeout(function () { renderMarkers(myMap, tempUserLocations); }, 1000);
    //renderMarkers(myMap, tempUserLocations);
}

function renderMarkers(myMap, myMarkers) { // create map markers based on IP geolocation

    var numberOfIPs = myMarkers.length;

    for (var i = 0; i < numberOfIPs; i++) { // create markers and event listeners for each IP
        var infoWindow = new google.maps.InfoWindow({});

        var marker;

        marker = new google.maps.Marker({
            position: new google.maps.LatLng(myMarkers[i][1], myMarkers[i][2]),
            map: myMap
        });

        google.maps.event.addListener(marker, 'click', (function (marker, i) {
            return function () {
                infoWindow.setContent(myMarkers[i][0]);
                infoWindow.open(myMap, marker);
            }
        })(marker, i));
    };
}

function initMap() {
    console.log('loading map...');
    // var myMap; // ref to map generated by initMap    

    googleMap = new google.maps.Map(document.getElementById("googleMap"), {
        center: {
            lat: 30.000,
            lng: 0.000
        },
        zoom: 2
    });
}

function refreshGoogleMap() {
    console.log('refreshing map...');

    googleMap = new google.maps.Map(document.getElementById("googleMap"), {
        center: {
            lat: 30.000,
            lng: 0.000
        },
        zoom: 2
    });
    
    readIPList(googleMap, googleMapType, postToken);
}

function setGoogleMapParams(type) {
    googleMapType = type;
    // console.log('Map type is: ' + googleMapType);
}

function setCsrfToken(token) {
    postToken = token;
    // console.log('postToken is: ' + postToken);
}